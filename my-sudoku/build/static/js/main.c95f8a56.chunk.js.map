{"version":3,"sources":["SudokuComp.js","funcSudoku.mjs","App.js","index.js"],"names":["SudokuComp","rows","property","flat","className","Table","style","width","fontSize","striped","bordered","hover","variant","map","i","idx","validity","_board","j","k","l","m","Math","floor","n","solver","arr","_data","console","log","App","init_rows","useState","isSending","setIsSending","useEffect","res","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c95f8a56.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react'\nimport Table from 'react-bootstrap/Table';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction SudokuComp({property}) {\n  // ***************************************\n  var rows = property.flat();\n  // ***************************************\n  return (\n    <div className=\"App\">\n      {/* <header className=\"header\">Sudoku </header> */}\n      <div className=\"App-header\">\n      <Table style={{width:'25vw',fontSize:'32px'}} striped bordered hover variant=\"dark\">\n        <tbody >\n        {\n        <tr>\n          {rows.map((i, idx)=>{\n              // if (rows.indexOf(i)%9==0){\n              if ((idx>=0 && idx<9)){\n                return (\n                      <td>{rows[idx]}</td>\n                        )\n              } \n          })}\n        </tr>\n        }\n        {\n        <tr>\n          {rows.map((i, idx)=>{\n              // if (rows.indexOf(i)%9==0){\n              if ((idx>=9 && idx<18)){\n                return (\n                      <td>{rows[idx]}</td>\n                        )\n              } \n          })}\n        </tr>\n        }\n        {\n        <tr>\n          {rows.map((i, idx)=>{\n              // if (rows.indexOf(i)%9==0){\n              if ((idx>=18 && idx<27)){\n                return (\n                      <td>{rows[idx]}</td>\n                        )\n              } \n          })}\n        </tr>\n        }\n        {\n        <tr>\n          {rows.map((i, idx)=>{\n              // if (rows.indexOf(i)%9==0){\n              if ((idx>=27 && idx<36)){\n                return (\n                      <td>{rows[idx]}</td>\n                        )\n              } \n          })}\n        </tr>\n        }\n        {\n        <tr>\n          {rows.map((i, idx)=>{\n              // if (rows.indexOf(i)%9==0){\n              if ((idx>=36 && idx<45)){\n                return (\n                      <td>{rows[idx]}</td>\n                        )\n              } \n          })}\n        </tr>\n        }\n         {\n        <tr>\n          {rows.map((i, idx)=>{\n              // if (rows.indexOf(i)%9==0){\n              if ((idx>=45 && idx<54)){\n                return (\n                      <td>{rows[idx]}</td>\n                        )\n              } \n          })}\n        </tr>\n        }\n        {\n        <tr>\n          {rows.map((i, idx)=>{\n              // if (rows.indexOf(i)%9==0){\n              if ((idx>=54 && idx<63)){\n                return (\n                      <td>{rows[idx]}</td>\n                        )\n              } \n          })}\n        </tr>\n        }\n        {\n        <tr>\n          {rows.map((i, idx)=>{\n              // if (rows.indexOf(i)%9==0){\n              if ((idx>=63 && idx<72)){\n                return (\n                      <td>{rows[idx]}</td>\n                        )\n              } \n          })}\n        </tr>\n        }\n        {\n        <tr>\n          {rows.map((i, idx)=>{\n              // if (rows.indexOf(i)%9==0){\n              if ((idx>=72 && idx<81)){\n                return (\n                      <td>{rows[idx]}</td>\n                        )\n              } \n          })}\n        </tr>\n        }\n        </tbody>\n      </Table>\n      </div>\n    </div>\n  );\n}\n\nexport default SudokuComp;\n","export function validity(_board, i, j, k) {  \r\n  const arr = [0,1,2,3,4,5,6,7,8];\r\n  for (const l of arr) {\r\n      const m = 3 * Math.floor(i / 3) + Math.floor(l / 3);\r\n      const n = 3 * Math.floor(j / 3) + l % 3;\r\n      // Simply CHECKING and not STORING keys/valuse in Dictionary\r\n      // board[i][l] ==> Checking cols\r\n      // board[l][j] ==> Checking rows\r\n      if (_board[i][l] == k || _board[l][j] == k || _board[m][n] == k) {          \r\n          if (k==9){ \r\n              j = n; // column equals to n \r\n          }\r\n        return false;\r\n      }\r\n    } \r\n    return true;\r\n}\r\nexport function solver(_board) {\r\n    const arr = [0,1,2,3,4,5,6,7,8];\r\n    for (const i of arr) {\r\n      // console.log(`for iter [i]=> ${i}`)\r\n      for (const j of arr) {\r\n      // console.log(`    for iter [j]=> ${j}`)\r\n        if (_board[i][j] == '.') {\r\n          // console.log(`found '.' => [i] ${i}  [j] ${j}`)\r\n          const arr2 = [1,2,3,4,5,6,7,8,9];\r\n              for (const k of arr2) {\r\n                  if (validity(_board, i, j, k)==true) {\r\n                    _board[i][j] = `${k}`;\r\n                      // console.log(`       ISVALID==true =>for iter [i]=> ${i}, for iter [j]=> ${j}, for iter [k]=> ${k}`)\r\n                            if (solver(_board)) {\r\n                              // console.log('sodokoSolver(data)==true',_board);\r\n                              const _data = _board ;\r\n                              console.log('_data',_board)\r\n                              var f = 45;\r\n                              return _data;\r\n                          } \r\n                  else if (validity(_board, i, j, k)==false) {\r\n                    _board[i][j] = '.';\r\n                      // console.log(`                 ISVALID==false =>for iter [i]=> ${i}, for iter [j]=> ${j}, for iter [k]=> ${k},  data[i][j] ${data[i][j]} `)\r\n                      }\r\n                  }\r\n              }\r\n              return false;\r\n          }\r\n      }\r\n    }\r\n    return true;\r\n}","import './App.css';\r\nimport React,{useEffect,useState} from \"react\";\r\nimport SudokuComp from './SudokuComp';\r\nimport {solver,validity} from './funcSudoku.mjs';\r\nfunction App() {\r\n    var _board = [\r\n        [\"6\", \"8\", \"5\", \".\", \"3\", \".\", \"4\", \".\", \"7\"],\r\n        [\".\", \".\", \".\", \"8\", \".\", \".\", \".\", \"2\", \".\"],\r\n        [\".\", \"1\", \".\", \"4\", \".\", \".\", \"5\", \".\", \".\"],\r\n        [\".\", \"9\", \".\", \"3\", \".\", \".\", \".\", \".\", \"5\"],\r\n        [\".\", \"4\", \".\", \".\", \".\", \".\", \"6\", \".\", \".\"],\r\n        [\"5\", \".\", \"8\", \".\", \".\", \"4\", \".\", \"3\", \".\"],\r\n        [\"9\", \"2\", \"6\", \".\", \"7\", \"8\", \"3\", \".\", \".\"],\r\n        [\"8\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\"],\r\n        [\".\", \".\", \"3\", \".\", \".\", \".\", \".\", \"1\", \"9\"],\r\n      ];\r\n    var init_rows = _board;\r\n    var [rows, setRows] = useState(init_rows);\r\n    var [isSending, setIsSending] = useState(false)\r\n\r\n    const solveSudoku = () => {\r\n        setIsSending(!isSending)\r\n    }\r\n    // const newSudoku = () => {\r\n    //     setIsSending(isSending)\r\n    // }\r\n    useEffect(() => {\r\n      // solver(init_rows);\r\n      var res = solver(_board);\r\n      console.log('result_rows',res)\r\n    },[isSending]);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className='header'>SOLVE SUDOKU</h1>\r\n      <p className=\"subheading\">Using backtracking and via Brute Force search</p>\r\n      {/* <button className=\"button\" onClick={newSudoku}>\r\n        <p>New Game</p>\r\n      </button> */}\r\n      {isSending==false ? <SudokuComp property={_board}/>: <SudokuComp property={rows}/>}\r\n        <p className=\"subheading\">Solve the Sudoku Puzzle</p>\r\n        <button className=\"button\" onClick={solveSudoku}>\r\n        {isSending==false ? <p>Click to Solve !</p>:<p>Click to Reset</p>}\r\n        </button>\r\n    </div>\r\n  );\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}